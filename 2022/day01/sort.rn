func swap(var A, i, j) {
    t = A[i]
    A[i] = A[j]
    A[j] = t
}


func partition(var A, low, high) {
    pivot = A[high]
    i = low - 1
    for j in range(low, high) {
        if A[j] <= pivot {
            i += 1
            swap(A, i, j)
        }
    }
    swap(A, i + 1, high)
    return i + 1
}


func quickSort(var A, low, high) {
    if low < high {
        pi = partition(A, low, high);
        if pi > 0 {
            quickSort(A, low, pi - 1)
        }
        quickSort(A, pi + 1, high)
    }
}


generator addSort(A: Class) {
    appendcode A {
        func sort(var self) {
            len = self.length()
            if len > 1 {
                quickSort(self, 0, len - 1)
            }
        }
    }
}

generate addSort(Array)
